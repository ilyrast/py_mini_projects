# -*- coding: utf-8 -*-

import simple_draw as sd


# На основе кода из практической части реализовать снегопад:
# - создать списки данных для отрисовки N снежинок
# - нарисовать падение этих N снежинок
# - создать список рандомных длин лучей снежинок (от 10 до 100) и пусть все снежинки будут разные

N = 20

# Пригодятся функции
# sd.get_point()
# sd.snowflake()
# sd.sleep()
# sd.random_number()
# sd.user_want_exit()
x_coord = []
length = []
coord = {}


# TODO, предлагаю изменить способ хранения снежинок, объединив данные из списков в массив. Пример:
#  Список списков снежинок:
#  example_snow_list = [["x", "y", "длина лучей"], ["x", "y", "длина лучей"], ["x", "y", "длина лучей"]]



# TODO, или просто range(N)
for i in range(0, N, 1):
    x = sd.random_number(10, sd.resolution[0])
    x_coord.append(x)
    coord.update({x_coord[i]: sd.resolution[1] - 10})
    len_i = sd.random_number(10, 100)
    while length.count(len_i) == True:
        len_i = sd.random_number(10, 100)
    length.append(len_i)

while True:
    sd.clear_screen()
    i = 0
    for coord_x, coord_y in coord.items():
        point = sd.get_point(coord_x, coord_y)
        sd.snowflake(center=point, length=length[i])
        coord.update({coord_x: coord_y - 10})
        i += 1
    # TODO, если снежинка упала, перезапускаем её, меняя координату "y", таким образом, снегопад получится бесконечным =)
    if coord_y < 10:
        break
    sd.sleep(0.1)
    if sd.user_want_exit():
        break

# Примерный алгоритм отрисовки снежинок
#   навсегда
#     очистка экрана
#     для индекс, координата_х из списка координат снежинок
#       получить координата_у по индексу
#       изменить координата_у и запомнить её в списке по индексу
#       создать точку отрисовки снежинки по координатам
#       нарисовать снежинку белым цветом в этой точке
#     немного поспать
#     если пользователь хочет выйти
#       прервать цикл


# Часть 2 (делается после зачета первой части)
#
# Ускорить отрисовку снегопада
# - убрать clear_screen() из цикла: полная очистка всего экрана - долгая операция.
# - использовать хак для стирания старого положения снежинки:
#       отрисуем её заново на старом месте, но цветом фона (sd.background_color) и она исчезнет!
# - использовать функции sd.start_drawing() и sd.finish_drawing()
#       для начала/окончания отрисовки кадра анимации
# - между start_drawing и finish_drawing библиотека sd ничего не выводит на экран,
#       а сохраняет нарисованное в промежуточном буфере, за счет чего достигается ускорение анимации
# - в момент вызова finish_drawing все нарисованное в буфере разом покажется на экране
#
# Примерный алгоритм ускоренной отрисовки снежинок
#   навсегда
#     начать рисование кадра
#     для индекс, координата_х из списка координат снежинок
#       получить координата_у по индексу
#       создать точку отрисовки снежинки
#       нарисовать снежинку цветом фона
#       изменить координата_у и запомнить её в списке по индексу
#       создать новую точку отрисовки снежинки
#       нарисовать снежинку на новом месте белым цветом
#     закончить рисование кадра
#     немного поспать
#     если пользователь хочет выйти
#       прервать цикл


# Усложненное задание (делать по желанию)
# - сделать рандомные отклонения вправо/влево при каждом шаге
# - сделать сугоб внизу экрана - если снежинка долетает до низа, оставлять её там,
#   и добавлять новую снежинку
# Результат решения см https://youtu.be/XBx0JtxHiLg
